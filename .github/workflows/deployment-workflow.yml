name: Deployment Workflow
on:
  push:
    branches:
      - production
  pull_request:
    branches:
      - production

env:
  AWS_REGION: us-east-1 # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: MY_ECR_REPOSITORY # set this to your Amazon ECR repository name
#   ECS_SERVICE: MY_ECS_SERVICE                 # set this to your Amazon ECS service name
#   ECS_CLUSTER: MY_ECS_CLUSTER                 # set this to your Amazon ECS cluster name
#   ECS_TASK_DEFINITION: MY_ECS_TASK_DEFINITION # set this to the path to your Amazon ECS task definition
#                                                # file, e.g. .aws/task-definition.json
#   CONTAINER_NAME: MY_CONTAINER_NAME           # set this to the name of the container in the
#                                                # containerDefinitions section of your task definition

jobs:
  test:
    name: Test application
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - name: checkout branch
        run: echo 'Checkout Branch - ${{github.reference.branch}}'

      - name: Use node version ${{matrix.node-version}}
        uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.node-version}}
          cache: 'yarn'
      - run: npm install -g yarn
      - run: yarn install
      - run: yarn build
      - run: yarn test

  # deploy:
  #   name: Deploy to Docker Registry
  #   runs-on: ubuntu-latest
  #   needs: test

  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: checkout branch
  #       run: echo 'Checkout Branch - ${{github.reference.branch}}'

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ env.AWS_REGION }}

  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

  #     - name: Build, tag, and push image to Amazon ECR
  #       id: build-image
  #       env:
  #         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #         IMAGE_TAG: ${{ github.sha }}
  #       run: |
  #         # Build a docker container and
  #         # push it to ECR so that it can
  #         # be deployed to ECS.
  #         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
  #         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  #         echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
